apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: run-tests
spec:
  params:
    - description: Testsuite image to run tests on
      name: testsuite-image
      type: string
    - description: Name of the Openshift project
      name: project
      type: string
    - description: Makefile target for tests
      name: make-target
      type: string
    - description: Config Map with settings for the testsuite
      name: settings-cm
      type: string
    - description: Additional env for testsuite container separated with spaces (e.g. KUADRANT_CONTROL_PLANE__provider_secret=gcp-credentials KUADRANT_KEYCLOAK__url="https://my-sso.net")
      name: additional-env
      type: string
    - description: Path to workspace kubeconfig (required to store multiple clusters in the workspace for multi-cluster tests)
      name: kubeconfig-path
      type: string
  steps:
    - args:
        - >-
          cp /var/kuadrant-settings/settings.local.yaml /opt/workdir/kuadrant-testsuite/config &&
          export $(params.additional-env) &> /dev/null && (make $(params.make-target) || true)
      command:
        - /bin/bash
        - -cveo
        - pipefail
      resources:
        limits:
          cpu: '1'
          memory: 1000Mi
      env:
        - name: KUBECONFIG
          value: $(params.kubeconfig-path)
        - name: WORKSPACE
          value: $(workspaces.shared-workspace.path)
        - name: KUADRANT_SERVICE_PROTECTION__project
          value: $(params.project)
        - name: KUBE_USER
          valueFrom:
            secretKeyRef:
              key: KUBE_USER
              name: openshift-pipelines-credentials
        - name: KUBE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: KUBE_PASSWORD
              name: openshift-pipelines-credentials
      image: $(params.testsuite-image)
      imagePullPolicy: Always
      name: run-tests
      volumeMounts:
        - mountPath: /var/kuadrant-settings
          name: $(params.settings-cm)
  volumes:
    - configMap:
        name: $(params.settings-cm)
      name: $(params.settings-cm)
  workspaces:
    - name: shared-workspace
