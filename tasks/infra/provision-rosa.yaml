apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: provision-rosa
spec:
  description: 'Provisions ROSA'
  params:
    - name: aws-credentials
      type: string
    - name: create-cmd-flags
      type: string
    - name: cluster-name
      type: string
    - name: region
      type: string
    - name: provision-cluster
      type: string
  results:
    - name: cluster-id
      description: cluster ID that OCM uses to identify the cluster
  steps:
    - computeResources:
        limits:
          cpu: '100m'
          memory: 64Mi
      env:
        - name: AWS_ACCOUNT_ID
          valueFrom:
            secretKeyRef:
              key: AWS_ACCOUNT_ID
              name: $(params.aws-credentials)
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: AWS_ACCESS_KEY_ID
              name: $(params.aws-credentials)
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: AWS_SECRET_ACCESS_KEY
              name: $(params.aws-credentials)
      image: 'quay.io/kuadrant/testsuite-pipelines-tools:latest'
      imagePullPolicy: Always
      name: provision-rosa
      script: |
        #!/usr/bin/env bash
        set -evo pipefail

        # Use ocm.json created by ocm-login Task
        export OCM_CONFIG=$(workspaces.shared-workspace.path)/ocm.json

        # OSD Cluster Creation Trigger
        if [[ "$(params.provision-cluster)" == "true" ]]; then
            rosa create cluster --cluster-name $(params.cluster-name) --region $(params.region) $(params.create-cmd-flags)
        fi

        # Include cluster ID in results
        echo -n `ocm get /api/clusters_mgmt/v1/clusters --parameter search="name like '$(params.cluster-name)'" | jq -r '.items[0].id'` | tee $(results.cluster-id.path)
  workspaces:
    - name: shared-workspace

